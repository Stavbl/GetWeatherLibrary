{
  "name": "GetWeatherLibrary",
  "tagline": "",
  "body": "## GetWeatherLibrary \r\n\r\nGetWeatherLibrary is an generic C# Library for developers to get weather data from around the world.\r\n\r\n## Code Example\r\n\r\n```c#\r\n// get the weather data in London using the GetWeatherData function\r\n\r\nOpenWeatherMapDataService.SetAppId(\"App ID that u got by signing in to openweathermap.org\");\r\nIWeatherDataService weatherService = WeatherDataServiceFactory.GetWeatherDataService(WeatherDataServiceFactoryType.OPEN_WEATHER_MAP);\r\n\r\n//(weatherService as OpenWeatherMapDataService).SetAppId(\"cb3f6e62c433d931e54b743eb177c694\");\r\n            \r\nLocation locationTest = new CityLocation(\"London\", \"UK\");\r\nWeatherData weatherDataToTest = weatherService.GetWeatherData(locationTest);\r\n```\r\n###### WeatherData:\r\nNow WeatherData holds up weather information like: \r\n\r\n- int clouds;\r\n- double lon, lat;\r\n- string city, country;\r\n- double temp, windSpeed;\r\n- int humidity;\r\n- DateTime dateTime;\r\n\r\n## Motivation\r\n\r\nThis implimintaion of GetWeather Library was given to me as a school assignment in my 3rd year BSc in Software Engineering by Shenkar College.\r\n\r\n## Installation\r\n\r\nIf using the OPEN_WEATHER_MAP Data Source U must sign in on [openweathermap.org](openweathermap.org) and Set the given App ID before \r\ngetting the WeatherData From the weather data service.\r\n```c#\r\n  // get the weather data in London using the GetWeatherData function\r\n  \r\n  OpenWeatherMapDataService.SetAppId(\"Your App ID...\");\r\n  IWeatherDataService weatherService = WeatherDataServiceFactory.GetWeatherDataService(WeatherDataServiceFactoryType.OPEN_WEATHER_MAP);\r\n```\r\n\r\n## API Reference\r\n##### `WeatherData GetWeatherData(Location location);`\r\nThis function gets City based location `Location location = new CityLocation(\"city\", \"country code\")` (country code is not obligatory) & Returns [WeatherData](#weatherdata) type object.\r\n\r\n##### `void SetUnitsFormat(Units unit);`\r\nThis function sets the unit of measure for the API\r\ninputs could be:\r\n- metric `Units.Celsius`\r\n- imperial `Units.Fahrenheit`\r\n- Temperture in Kelvin Units by Default\r\n\r\n``` c#\r\nweatherService.SetUnitsFormat(Units.Option);\r\n```\r\nOnly After getting the weather data service!!!\r\n\r\n## Tests\r\n\r\nThere is a project called `WeatherUnitTest`\r\njust run tests as Unit test Project.\r\nit will run:\r\n\r\n`GetWeatherDataValueTest` comparing live web requset from openweathermap.org to one gotten from the library\r\n\r\n`SetTempUnits` comparing live web requset from openweathermap.org to one gotten from the library using metric unit\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}